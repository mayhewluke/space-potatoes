Quality:
  ✔ Fix bug with ship not wrapping after it's already wrapped past one screen's worth. @done(Jun-03-2019)
  ☐ Make sure commented-out code is removed.
  ✔ Refactor + extract the logic for tracking the list of asteroids. @done(Jun-05-2019)
  ✔ Refactor + extract the logic for tracking the list of explosions. @done(Jun-03-2019)
  ✔ Use explicit overloads to make `pipe` smarter about type inference. @done(Jun-03-2019)
  ☐ Use `pipe` everywhere instead of intermediate variables and transforms
    within transforms.
  ✔ Ensure all public exports in `src/frp` are exported. @done(Jun-07-2019)
  ☐ Ensure all imports are from `src/frp`, not its children.
  ☐ See if the update function pattern would help the core state logic.
  ☐ Test all FRP code.
  ☐ Check for proper resource release when a stream is no longer needed.
  ☐ Extract hard-coded values into configuration variables (eg. explosion size,
    ship size, etc.).
  ✔ Solve problems with order-of-occurrence (example: ship moving slowly triggers multiple death explosions due to the concatDyn(...asteroids) firing multiple times before the ship updates. @done(Jun-04-2019)

Features:
  ✔ Ship can fire bullets that destroy asteroids. @done(Jun-05-2019)
    ✔ Implement throttle FRP operator. @done(Jun-05-2019)
    ✔ Throttle the "fire key" events to prevent a continuous stream of bullets (ie. enforce a fire rate). @done(Jun-05-2019)
    ✔ Create a self-managed `Bullet` component, which can: @done(Jun-05-2019)
      ✔ Update its own position each frame. @done(Jun-05-2019)
      ✔ Emit an expiry event once its lifetime is over. @done(Jun-05-2019)
    ✔ Create a self-managed `BulletList` component, which can: @done(Jun-05-2019)
      ✔ Add a new bullet to the list whenever it receives a "bullet fired" event. @done(Jun-05-2019)
      ✔ Remove a bullet from the list whenever the bullet emits an expiry event. @done(Jun-05-2019)
      ✔ Return the list of bullets, so the main game logic can check for collisions. @done(Jun-05-2019)
    ✔ Check for bullet-asteroid collisions in the main game logic. When a collision is detected:_ @done(Jun-05-2019)
      ✔ Create a new explosion at the bullet's position. @done(Jun-05-2019)
      ✔ Delete the asteroid. @done(Jun-05-2019)
      ✔ Delete the bullet. @done(Jun-05-2019)
  ☐ Change ship fire key to use spacebar.
  ☐ Add a "Reset game" button for when all asteroids have been destroyed or the
    ship has been destroyed.
  ☐ Asteroids can't spawn within a certain radius of the ship.

Long-term:
  ☐ Move away from Create React App (and all React-related setup) to a setup properly tailored for Space Potatoes.
  ☐ Auto-reset the game when the ship has been destroyed.
    - Consider some kind of countdown before the game resumes so that it isn't
      jarring and doesn't surprise players with suddenly having to dodge new
      asteroids.
  ☐ Auto-reset the game when all asteroids have been destroyed.
    - Consider a countdown.
  ☐ Add levels (when all asteroids are destroyed, reset ship location, spawn a
    new set of asteroids with more difficult properties (max speed, max
    number)).
  ☐ Add lives (start with X lives, when ship is destroyed lose a live, respawn
    at the start location, and become invincible for a few seconds).
  ☐ Add score.
  ☐ Save scores in localStorage, and display a high score list somewhere.
  ☐ Sound effects.
  ☐ Music.
  ☐ Pause/resume game. (auto-pause when not focused?)
  ☐ Options menu with:
    ☐ Toggle sound.
    ☐ Toggle music.
  ☐ Objects overlapping the edge of the screen should appear on both sides simultaneously, with corresponding hitboxes.